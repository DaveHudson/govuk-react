// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RelatedItems matches wrapper snapshot: wrapper mount 1`] = `
.c7 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.c7:link {
  color: #005ea5;
}

.c7:visited {
  color: #4c2c92;
}

.c7:hover {
  color: #2b8cc4;
}

.c7:active {
  color: #2b8cc4;
}

.c7:focus {
  color: #0b0c0c;
}

.c7:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
  background-color: #ffbf47;
}

.c2 {
  color: #0b0c0c;
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 700;
  font-size: 18px;
  line-height: 1.1111111111111112;
  display: block;
  margin-top: 0;
  margin-bottom: 15px;
}

.c6 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  margin-bottom: 5px;
}

.c4 {
  font-family: "nta",Arial,sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.25;
  color: #0b0c0c;
  margin-top: 0;
  margin-bottom: 15px;
  list-style-type: none;
  padding-left: 0;
}

.c4 .c3 {
  margin-top: 10px;
}

.c4 > .c5 {
  margin-bottom: 5px;
}

.c1 {
  border-top: 10px solid #005ea5;
  padding-top: 5px;
  width: 100%;
}

.c1 > h3 {
  margin-bottom: 10px;
}

.c1 > ul {
  margin-bottom: 20px;
}

.c1 > ul > li {
  margin-bottom: calc(10px + 2px);
}

.c0 {
  margin-bottom: 0;
}

@media print {
  .c7 {
    font-family: sans-serif;
  }
}

@media print {
  .c7[href^="/"]::after,
  .c7[href^="http://"]::after,
  .c7[href^="https://"]::after {
    content: " (" attr(href) ")";
    font-size: 90%;
    word-wrap: break-word;
  }
}

@media print {
  .c2 {
    color: #000;
  }
}

@media print {
  .c2 {
    font-size: 18px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c2 {
    font-size: 24px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c2 {
    margin-bottom: 20px;
  }
}

@media print {
  .c6 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c6 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media print {
  .c4 {
    font-size: 14px;
    line-height: 1.15;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    font-size: 19px;
    line-height: 1.3157894736842106;
  }
}

@media print {
  .c4 {
    color: #000;
  }
}

@media only screen and (min-width:641px) {
  .c4 {
    margin-bottom: 20px;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    font-size: 16px;
    line-height: 1.25;
  }
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 0;
  }
}

<Styled(RelatedItems)>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-dnqmqq",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "Styled(RelatedItems)",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "margin": [Function],
          "mb": [Function],
          "padding": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-dnqmqq",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
  >
    <RelatedItems
      className="c0"
    >
      <styled.div
        className="c0"
      >
        <StyledComponent
          className="c0"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htoDjs",
                "isStatic": true,
                "lastClassName": "c1",
                "rules": Array [
                  "border-top: 10px solid #005ea5; padding-top: 5px; width: 100%; @media only screen and (min-width: 641px) {
  font-size: 16px; line-height: 1.25;
} > h3 {
  margin-bottom: 10px;
} > ul {
  margin-bottom: 20px; > li {
  margin-bottom: calc(10px + 2px);
}
}",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htoDjs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c0 c1"
          >
            <Styled(Header)
              level={3}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-EHOje",
                      "isStatic": false,
                      "lastClassName": "jvzENE",
                      "rules": Array [
                        [Function],
                      ],
                    },
                    "displayName": "Styled(Header)",
                    "foldedComponentIds": Array [],
                    "propTypes": Object {
                      "margin": [Function],
                      "mb": [Function],
                      "padding": [Function],
                    },
                    "render": [Function],
                    "styledComponentId": "sc-EHOje",
                    "target": [Function],
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  }
                }
                forwardedRef={null}
                level={3}
              >
                <Header
                  className=""
                  level={3}
                >
                  <Styled(Component)
                    className=""
                    level={3}
                  >
                    <StyledComponent
                      className=""
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-ifAKCX",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              "color: #0b0c0c; @media print {
  color: #000;
}",
                              [Function],
                              "display: block; margin-top: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "Styled(Component)",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-ifAKCX",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                      level={3}
                    >
                      <Component
                        className="c2"
                        level={3}
                      >
                        <h3
                          className="c2"
                        >
                          Travel abroad
                        </h3>
                      </Component>
                    </StyledComponent>
                  </Styled(Component)>
                </Header>
              </StyledComponent>
            </Styled(Header)>
            <UnorderedList
              listStyleType="none"
            >
              <styled.ol
                as="ul"
                listStyleType="none"
              >
                <StyledComponent
                  as="ul"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "c3",
                        "isStatic": false,
                        "lastClassName": "c4",
                        "rules": Array [
                          "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.15;
} font-weight: 400; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3157894736842106;
}",
                          "color: #0b0c0c; @media print {
  color: #000;
}",
                          "margin-top: 0; & & {
  margin-top: 10px;
}",
                          [Function],
                          [Function],
                        ],
                      },
                      "defaultProps": Object {
                        "listStyleType": undefined,
                      },
                      "displayName": "styled.ol",
                      "foldedComponentIds": Array [],
                      "propTypes": undefined,
                      "render": [Function],
                      "styledComponentId": "c3",
                      "target": "ol",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  listStyleType="none"
                >
                  <ul
                    className="c3 c4"
                  >
                    <styled.li>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "c5",
                              "isStatic": false,
                              "lastClassName": "c6",
                              "rules": Array [
                                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.15;
} font-weight: 400; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3157894736842106;
}",
                                "margin-bottom: 5px;",
                                [Function],
                              ],
                            },
                            "displayName": "styled.li",
                            "foldedComponentIds": Array [],
                            "propTypes": undefined,
                            "render": [Function],
                            "styledComponentId": "c5",
                            "target": "li",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <li
                          className="c5 c6"
                        >
                          <styled.a
                            href="https://example.com"
                            muted={false}
                            noVisitedState={false}
                            textColour={false}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                      ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                      "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                      "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "defaultProps": Object {
                                    "muted": false,
                                    "noVisitedState": false,
                                    "textColour": false,
                                  },
                                  "displayName": "styled.a",
                                  "foldedComponentIds": Array [],
                                  "propTypes": undefined,
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="https://example.com"
                              muted={false}
                              noVisitedState={false}
                              textColour={false}
                            >
                              <a
                                className="c7"
                                href="https://example.com"
                                muted={false}
                              >
                                Link A
                              </a>
                            </StyledComponent>
                          </styled.a>
                        </li>
                      </StyledComponent>
                    </styled.li>
                    <styled.li>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "c5",
                              "isStatic": false,
                              "lastClassName": "c6",
                              "rules": Array [
                                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.15;
} font-weight: 400; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3157894736842106;
}",
                                "margin-bottom: 5px;",
                                [Function],
                              ],
                            },
                            "displayName": "styled.li",
                            "foldedComponentIds": Array [],
                            "propTypes": undefined,
                            "render": [Function],
                            "styledComponentId": "c5",
                            "target": "li",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <li
                          className="c5 c6"
                        >
                          <styled.a
                            href="https://example.com"
                            muted={false}
                            noVisitedState={false}
                            textColour={false}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                      ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                      "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                      "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "defaultProps": Object {
                                    "muted": false,
                                    "noVisitedState": false,
                                    "textColour": false,
                                  },
                                  "displayName": "styled.a",
                                  "foldedComponentIds": Array [],
                                  "propTypes": undefined,
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="https://example.com"
                              muted={false}
                              noVisitedState={false}
                              textColour={false}
                            >
                              <a
                                className="c7"
                                href="https://example.com"
                                muted={false}
                              >
                                Link B
                              </a>
                            </StyledComponent>
                          </styled.a>
                        </li>
                      </StyledComponent>
                    </styled.li>
                    <styled.li>
                      <StyledComponent
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "c5",
                              "isStatic": false,
                              "lastClassName": "c6",
                              "rules": Array [
                                "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-size: 14px; line-height: 1.15;
} font-weight: 400; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3157894736842106;
}",
                                "margin-bottom: 5px;",
                                [Function],
                              ],
                            },
                            "displayName": "styled.li",
                            "foldedComponentIds": Array [],
                            "propTypes": undefined,
                            "render": [Function],
                            "styledComponentId": "c5",
                            "target": "li",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <li
                          className="c5 c6"
                        >
                          <styled.a
                            href="https://example.com"
                            muted={false}
                            noVisitedState={false}
                            textColour={false}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-bdVaJa",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "font-family: \\"nta\\", Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; @media print {
  font-family: sans-serif;
}",
                                      ":link {
  color: #005ea5;
} :visited {
  color: #4c2c92;
} :hover {
  color: #2b8cc4;
} :active {
  color: #2b8cc4;
} :focus {
  color: #0b0c0c;
}",
                                      "&:focus {
  outline: 3px solid #ffbf47; outline-offset: 0; background-color: #ffbf47;
}",
                                      "@media print {
  &[href^=\\"/\\"], &[href^=\\"http://\\"], &[href^=\\"https://\\"] {
  &::after {
  content: \\" (\\" attr(href) \\")\\"; font-size: 90%; word-wrap: break-word;
}
}
}",
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "defaultProps": Object {
                                    "muted": false,
                                    "noVisitedState": false,
                                    "textColour": false,
                                  },
                                  "displayName": "styled.a",
                                  "foldedComponentIds": Array [],
                                  "propTypes": undefined,
                                  "render": [Function],
                                  "styledComponentId": "sc-bdVaJa",
                                  "target": "a",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              href="https://example.com"
                              muted={false}
                              noVisitedState={false}
                              textColour={false}
                            >
                              <a
                                className="c7"
                                href="https://example.com"
                                muted={false}
                              >
                                <strong>
                                  more
                                </strong>
                              </a>
                            </StyledComponent>
                          </styled.a>
                        </li>
                      </StyledComponent>
                    </styled.li>
                  </ul>
                </StyledComponent>
              </styled.ol>
            </UnorderedList>
          </div>
        </StyledComponent>
      </styled.div>
    </RelatedItems>
  </StyledComponent>
</Styled(RelatedItems)>
`;
